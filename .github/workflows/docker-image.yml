name: Build and Push Docker Images

on:
  push:
    paths:
      - 'api/**'
      - '.github/workflows/docker-image.yml'

jobs:
  run-api-tests:
    name: Run API Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: photosdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Install Git LFS
        run: |
          sudo apt-get install git-lfs
          git lfs install
          git lfs pull

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio
      - name: Check torch version
        run: python -c "import torch; print(torch.__version__)"
      - name: Run API tests
        env:
          DATABASE_URL: postgresql+asyncpg://user:password@localhost:5432/photosdb
        run: pytest ./api/test

  build-and-push-db:
    name: Build & Push DB Image
    runs-on: ubuntu-latest
    needs: run-api-tests
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Postgres image with init script
        uses: docker/build-push-action@v5
        with:
          context: ./db
          file: ./db/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/melanoma-recognizer-db:latest

  build-and-push-api:
    name: Build & Push API Image
    runs-on: ubuntu-latest
    needs: [build-and-push-db, run-api-tests]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Git LFS
        run: |
          sudo apt-get install git-lfs
          git lfs install
          git lfs pull

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/melanoma-recognizer-api:latest
          build-args: |
            S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}
            S3_ENDPOINT_URL=${{ secrets.S3_ENDPOINT_URL }}
            S3_ACCESS_KEY=${{ secrets.S3_ACCESS_KEY }}
            S3_SECRET_KEY=${{ secrets.S3_SECRET_KEY }}
            S3_REGION=${{ secrets.S3_REGION }}
